import { NextResponse } from "next/server"
import { Resend } from "resend"

// Developer email constant
const DEVELOPER_EMAIL = "mib@programmer.net"

// Initialize Resend with API key
const resend = new Resend(process.env.RESEND_API_KEY)

export async function POST(request: Request) {
  try {
    // Parse the request body
    const data = await request.json()

    // Validate the request data
    if (!data.message || !data.type) {
      return NextResponse.json({ error: "Missing required fields" }, { status: 400 })
    }

    // Validate Resend API key
    if (!process.env.RESEND_API_KEY) {
      console.error("RESEND_API_KEY environment variable is not set")
      return NextResponse.json({ error: "Email service not configured" }, { status: 500 })
    }

    // Format the feedback type for display
    const feedbackTypeDisplay = data.type.charAt(0).toUpperCase() + data.type.slice(1).replace(/([A-Z])/g, " $1")

    // Create email content
    const emailSubject = `[${feedbackTypeDisplay.toUpperCase()}] Quit Smoking App Feedback from ${data.userInfo.name}`

    const emailHtml = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>New Feedback - Quit Smoking App</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px 8px 0 0; text-align: center; }
            .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
            .message-box { background: white; padding: 15px; border-radius: 6px; margin: 15px 0; border-left: 4px solid #667eea; }
            .user-info { background: #e8f4f8; padding: 15px; border-radius: 6px; margin: 15px 0; }
            .app-data { background: #f0f8e8; padding: 15px; border-radius: 6px; margin: 15px 0; }
            .label { font-weight: bold; color: #555; }
            .value { color: #333; }
            .footer { text-align: center; margin-top: 20px; padding-top: 20px; border-top: 1px solid #ddd; color: #666; font-size: 12px; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>üö≠ Quit Smoking App</h1>
            <h2>New ${feedbackTypeDisplay}</h2>
          </div>
          
          <div class="content">
            <div class="message-box">
              <h3>üìù Message:</h3>
              <p>${data.message.replace(/\n/g, "<br>")}</p>
            </div>

            <div class="user-info">
              <h3>üë§ User Information:</h3>
              <p><span class="label">Name:</span> <span class="value">${data.userInfo.name}</span></p>
              <p><span class="label">Email:</span> <span class="value">${data.userInfo.email}</span></p>
              <p><span class="label">User ID:</span> <span class="value">${data.userInfo.userId}</span></p>
              <p><span class="label">Submitted:</span> <span class="value">${new Date(data.appInfo.timestamp).toLocaleString()}</span></p>
            </div>

            <div class="app-data">
              <h3>üìä User Journey Data:</h3>
              <p><span class="label">Days Smoke-Free:</span> <span class="value">${data.userData.daysSinceQuit} days</span></p>
              <p><span class="label">Previous Daily Habit:</span> <span class="value">${data.userData.smokesPerDay} cigarettes/day</span></p>
              <p><span class="label">Quit Date:</span> <span class="value">${new Date(data.userData.quitDate).toLocaleDateString()}</span></p>
            </div>

            <div class="user-info">
              <h3>üîß Technical Information:</h3>
              <p><span class="label">URL:</span> <span class="value">${data.appInfo.url}</span></p>
              <p><span class="label">User Agent:</span> <span class="value">${data.appInfo.userAgent}</span></p>
            </div>
          </div>

          <div class="footer">
            <p>This email was automatically generated by the Quit Smoking App feedback system.</p>
            <p>Reply directly to this email to respond to the user.</p>
          </div>
        </body>
      </html>
    `

    // Send email using Resend
    const emailResult = await resend.emails.send({
      from: "Quit Smoking App <noreply@resend.dev>", // Using Resend's default domain
      to: [DEVELOPER_EMAIL],
      replyTo: data.userInfo.email, // Allow direct reply to user
      subject: emailSubject,
      html: emailHtml,
    })

    console.log(`‚úÖ Feedback email sent successfully to ${DEVELOPER_EMAIL}:`, emailResult)

    // Return success response
    return NextResponse.json({
      success: true,
      message: "Feedback sent successfully",
      emailId: emailResult.data?.id,
    })
  } catch (error) {
    console.error("‚ùå Error sending feedback email:", error)

    // Return appropriate error message
    if (error instanceof Error) {
      return NextResponse.json(
        {
          error: "Failed to send feedback",
          details: error.message,
        },
        { status: 500 },
      )
    }

    return NextResponse.json({ error: "Failed to send feedback" }, { status: 500 })
  }
}
